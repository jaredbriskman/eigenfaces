(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     34330,        922]
NotebookOptionsPosition[     33068,        880]
NotebookOutlinePosition[     33413,        895]
CellTagsIndexPosition[     33370,        892]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<C:\\\\Users\\\\jbriskman\\\\Documents\\\\GitHub\\\\eigenfaces\\\\\
finalFaces\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"testNames$import", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"FileNames", "[", "]"}], ",", 
     RowBox[{"-", "1"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"testNames", "=", 
   RowBox[{
    RowBox[{"StringSplit", "[", 
     RowBox[{"testNames$import", ",", "\"\<_\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testSet$raw", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Import", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
    "testNames$import"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<C:\\\\Users\\\\jbriskman\\\\Documents\\\\GitHub\\\\eigenfaces\\\\\
database\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dataNames$import", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"FileNames", "[", "]"}], ",", 
     RowBox[{"-", "1"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dataNames", "=", 
   RowBox[{
    RowBox[{"StringSplit", "[", 
     RowBox[{"dataNames$import", ",", "\"\<_\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataSet$raw", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Import", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
    "dataNames$import"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testSet$gray", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ColorConvert", "[", 
      RowBox[{"#", ",", "\"\<grayscale\>\""}], "]"}], "&"}], "/@", 
    "testSet$raw"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataSet$gray", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ColorConvert", "[", 
      RowBox[{"#", ",", "\"\<grayscale\>\""}], "]"}], "&"}], "/@", 
    "dataSet$raw"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testSet", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ImageData", "[", 
      RowBox[{"ImageResize", "[", 
       RowBox[{"#", ",", "30"}], "]"}], "]"}], "&"}], "/@", 
    "testSet$gray"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataSet", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ImageData", "[", 
      RowBox[{"ImageResize", "[", 
       RowBox[{"#", ",", "30"}], "]"}], "]"}], "&"}], "/@", 
    "dataSet$gray"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testSet$flat", "=", 
   RowBox[{"Flatten", "/@", "testSet"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataSet$flat", "=", 
   RowBox[{"Flatten", "/@", "dataSet"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6708040355841*^9, 3.6708040895081563`*^9}, {
  3.670804635945156*^9, 3.6708046377961564`*^9}}],

Cell[CellGroupData[{

Cell["funcs:", "Subsubsection",
 CellChangeTimes->{{3.6708005433901353`*^9, 3.6708005470430393`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"eigenFace", "[", "faces_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "vectorList", ",", "testList", ",", "meanImage", ",", "cov", ",", "eval",
       ",", "evec$raw", ",", "evec", ",", "vectorList$centered"}], "}"}], ",",
     "\n", 
    RowBox[{
     RowBox[{"vectorList", " ", "=", " ", 
      RowBox[{"Flatten", "/@", "faces"}]}], ";", "\n", 
     RowBox[{"meanImage", "=", 
      FractionBox[
       RowBox[{"Total", "[", 
        RowBox[{"vectorList", ",", 
         RowBox[{"{", "1", "}"}]}], "]"}], 
       RowBox[{"Length", "[", "vectorList", "]"}]]}], ";", "\n", 
     RowBox[{"vectorList$centered", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "-", "meanImage"}], ")"}], "&"}], "/@", 
       "vectorList"}]}], ";", "\n", 
     RowBox[{"cov", "=", 
      RowBox[{"our$Covariance", "[", "vectorList$centered", "]"}]}], ";", 
     "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eval", ",", "evec$raw"}], "}"}], "=", 
      RowBox[{"Eigensystem", "[", "cov", "]"}]}], ";", "\n", 
     RowBox[{"evec", "=", 
      RowBox[{"Normalize", "/@", "evec$raw"}]}]}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{
  3.6708005517736197`*^9, {3.6708389985721674`*^9, 3.6708390003546553`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"view", "[", "vector_", "]"}], ":=", 
  RowBox[{"ImageAdjust", "@", 
   RowBox[{"Image", "[", 
    RowBox[{"ArrayReshape", "[", 
     RowBox[{"vector", ",", 
      RowBox[{"Dimensions", "[", 
       RowBox[{"dataSet", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], "]"}]}]}]], "Code",
 CellChangeTimes->{{3.6705864980750523`*^9, 3.6705865477505403`*^9}, {
  3.6708001665115643`*^9, 3.6708001786337767`*^9}, {3.670800249829895*^9, 
  3.670800262901202*^9}, {3.670800359084817*^9, 3.67080036601751*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"whoEig", "[", 
   RowBox[{"test_", ",", "training_", ",", "spec_", ",", "evec_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "test$decomposed", ",", "training$decomposed", ",", "distances"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"training$decomposed", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"training", ".", 
         RowBox[{"Transpose", "[", 
          RowBox[{"evec", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "spec"}], "]"}], "]"}], "]"}]}], ")"}], ".", 
       RowBox[{"evec", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "spec"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"test$decomposed", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"test", ".", 
         RowBox[{"Transpose", "[", 
          RowBox[{"evec", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "spec"}], "]"}], "]"}], "]"}]}], ")"}], ".", 
       RowBox[{"evec", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "spec"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"distances", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"EuclideanDistance", "[", 
         RowBox[{"test$decomposed", ",", "#"}], "]"}], "&"}], "/@", 
       "training"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{"distances", ",", 
         RowBox[{"Min", "@", "distances"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Code",
 CellChangeTimes->{
  3.670793899213995*^9, {3.6708011792645664`*^9, 3.670801182607399*^9}, {
   3.6708012329448996`*^9, 3.670801234104842*^9}, {3.6708110231161737`*^9, 
   3.6708110268721743`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"whoPix", "[", 
   RowBox[{"test_", ",", "training_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "corList", "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"corList", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Correlation", "[", 
         RowBox[{"test", ",", "#"}], "]"}], "&"}], "/@", "training"}]}], ";", 
     "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{"corList", ",", 
         RowBox[{"Max", "@", "corList"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.670801255544778*^9, 3.6708012928740253`*^9}, {
  3.670801867248026*^9, 3.6708018968394856`*^9}, {3.6708025822907753`*^9, 
  3.6708025953340793`*^9}, {3.670802699905535*^9, 3.670802712792824*^9}, {
  3.67080276705425*^9, 3.67080279946349*^9}, {3.6708029713256745`*^9, 
  3.670803033505892*^9}, {3.67080345072416*^9, 3.67080347076616*^9}, {
  3.670803675063051*^9, 3.6708037004395885`*^9}, {3.6708041082881565`*^9, 
  3.670804150483156*^9}, {3.6708043529751563`*^9, 3.6708043644561567`*^9}, {
  3.6708048716901565`*^9, 3.6708048749671564`*^9}, {3.6708103173094177`*^9, 
  3.670810322589385*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"viewWho", "[", 
   RowBox[{"test_", ",", "training_", ",", "spec_", ",", "evec_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "index", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"index", " ", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"whoEig", "[", 
         RowBox[{"test", ",", "training", ",", "spec"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<input\>\"", ",", "\"\<guess\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"view", "[", "test", "]"}], ",", 
          RowBox[{"view", "[", 
           RowBox[{"training", "[", 
            RowBox[{"[", "index", "]"}], "]"}], "]"}]}], "}"}]}], "}"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{
  3.6707938805450144`*^9, {3.670801185346266*^9, 3.6708011875851545`*^9}, {
   3.670801240040547*^9, 3.6708012410254984`*^9}, {3.6708049636931562`*^9, 
   3.6708049666001563`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"viewWhoPix", "[", 
   RowBox[{"test_", ",", "training_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "index", "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"index", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"whoPix", "[", 
         RowBox[{"test", ",", "training"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<input\>\"", ",", "\"\<guess\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"view", "[", "test", "]"}], ",", 
          RowBox[{"view", "[", 
           RowBox[{"training", "[", 
            RowBox[{"[", "index", "]"}], "]"}], "]"}]}], "}"}]}], "}"}], 
      "]"}]}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.670804742747156*^9, 3.6708048551781564`*^9}, {
  3.6708048949401565`*^9, 3.6708049557631564`*^9}, {3.670810655227174*^9, 
  3.6708106570711737`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"testdatasetQ", "[", 
   RowBox[{
   "testIndex_", ",", "guessIndex_", ",", "testNames_", ",", "guessNames_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"testNames", "[", 
      RowBox[{"[", "testIndex", "]"}], "]"}], "\[Equal]", 
     RowBox[{"guessNames", "[", 
      RowBox[{"[", "guessIndex", "]"}], "]"}]}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.67080332524816*^9, 3.6708033285191603`*^9}, {
   3.67080336913616*^9, 3.6708034026261597`*^9}, {3.6708039539079328`*^9, 
   3.6708039663761797`*^9}, {3.670804099511156*^9, 3.6708041008711567`*^9}, {
   3.670804144450156*^9, 3.6708041577931566`*^9}, {3.6708042550051565`*^9, 
   3.670804278773156*^9}, {3.6708043849461565`*^9, 3.670804385327156*^9}, {
   3.6708044543551564`*^9, 3.6708045348961563`*^9}, {3.6708046572421565`*^9, 
   3.6708046685781565`*^9}, {3.6708049732771564`*^9, 3.6708050157861567`*^9}, 
   3.6708051839531565`*^9, {3.670808885583491*^9, 3.6708088881805696`*^9}, {
   3.670809829509259*^9, 3.6708098634794135`*^9}, {3.6708100484010468`*^9, 
   3.67081020663571*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"testerPix", "[", "index_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"guessIndex", ",", " ", "bool"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"guessIndex", " ", "=", " ", 
      RowBox[{"whoPix", "[", 
       RowBox[{
        RowBox[{"testSet$flat", "[", 
         RowBox[{"[", "index", "]"}], "]"}], ",", "dataSet$flat"}], "]"}]}], 
     ";", "\n", 
     RowBox[{"bool", " ", "=", " ", 
      RowBox[{"testdatasetQ", "[", 
       RowBox[{
       "index", ",", "guessIndex", ",", "testNames", ",", "dataNames"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"Grid", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<input\>\"", ",", "\"\<guess\>\"", ",", " ", "\"\<Bool\>\""}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"view", "[", 
           RowBox[{"testSet$flat", "[", 
            RowBox[{"[", "index", "]"}], "]"}], "]"}], ",", 
          RowBox[{"view", "[", 
           RowBox[{"dataSet$flat", "[", 
            RowBox[{"[", "guessIndex", "]"}], "]"}], "]"}], ",", 
          RowBox[{"ToString", "@", "bool"}]}], "}"}]}], "}"}], "]"}]}]}], 
   "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.67081024321937*^9, 3.670810520348174*^9}, {
   3.670810619893174*^9, 3.670810732592174*^9}, {3.670810773716174*^9, 
   3.670810804606174*^9}, {3.6708109106881742`*^9, 3.6708109111741743`*^9}, 
   3.670816200636465*^9, 3.670838282753003*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"testerEig", "[", 
   RowBox[{"index_", ",", "spec_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"guessIndex", ",", "bool", ",", "evec"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"evec", "=", 
      RowBox[{"eigenFace", "[", "dataSet", "]"}]}], ";", "\n", 
     RowBox[{"guessIndex", " ", "=", " ", 
      RowBox[{"whoEig", "[", 
       RowBox[{
        RowBox[{"testSet$flat", "[", 
         RowBox[{"[", "index", "]"}], "]"}], ",", "dataSet$flat", ",", "spec",
         ",", "evec"}], "]"}]}], ";", "\n", 
     RowBox[{"bool", " ", "=", " ", 
      RowBox[{"testdatasetQ", "[", 
       RowBox[{
       "index", ",", "guessIndex", ",", "testNames", ",", "dataNames"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"Grid", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<input\>\"", ",", "\"\<guess\>\"", ",", " ", "\"\<Bool\>\""}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"view", "[", 
           RowBox[{"testSet$flat", "[", 
            RowBox[{"[", "index", "]"}], "]"}], "]"}], ",", 
          RowBox[{"view", "[", 
           RowBox[{"dataSet$flat", "[", 
            RowBox[{"[", "guessIndex", "]"}], "]"}], "]"}], ",", 
          RowBox[{"ToString", "@", "bool"}]}], "}"}]}], "}"}], "]"}]}]}], 
   "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.6708105254251738`*^9, 3.6708105562621737`*^9}, {
  3.670810915693174*^9, 3.670810940736174*^9}, {3.6708109788391743`*^9, 
  3.670811119565174*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"testerPix", "[", 
   RowBox[{
   "index_", ",", "testGroup_", ",", "trainingGroup_", ",", "testNameList_", 
    ",", "trainingNameList_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"guessIndex", ",", " ", "bool"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"guessIndex", " ", "=", " ", 
      RowBox[{"whoPix", "[", 
       RowBox[{
        RowBox[{"testGroup", "[", 
         RowBox[{"[", "index", "]"}], "]"}], ",", "trainingGroup"}], "]"}]}], 
     ";", "\n", 
     RowBox[{"bool", " ", "=", " ", 
      RowBox[{"testdatasetQ", "[", 
       RowBox[{
       "index", ",", "guessIndex", ",", "testNameList", ",", 
        "trainingNameList"}], "]"}]}], ";", "\n", 
     RowBox[{"Grid", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<input\>\"", ",", "\"\<guess\>\"", ",", " ", "\"\<Bool\>\""}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"view", "[", 
           RowBox[{"testGroup", "[", 
            RowBox[{"[", "index", "]"}], "]"}], "]"}], ",", 
          RowBox[{"view", "[", 
           RowBox[{"trainingGroup", "[", 
            RowBox[{"[", "guessIndex", "]"}], "]"}], "]"}], ",", 
          RowBox[{"ToString", "@", "bool"}]}], "}"}]}], "}"}], "]"}]}]}], 
   "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.6708381360404673`*^9, 3.670838191263753*^9}, {
  3.6708382254613733`*^9, 3.6708383418577623`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"our$Covariance", "[", "list_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"Transpose", "[", "list", "]"}], ".", "list"}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.6708388629063597`*^9, 3.6708389568224664`*^9}, {
  3.670839743977461*^9, 3.6708397778498583`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"setSplit", "[", 
   RowBox[{"list_", ",", "testSize_", ",", "names_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "faceGroups", ",", "sample", ",", "imagesets", ",", "tuples$test", ",", 
      "tuples$training", ",", "tuples", ",", "test$images", ",", "test$names",
       ",", "zipList", ",", "training$images", ",", "data$names"}], "}"}], 
    ",", "\n", 
    RowBox[{
     RowBox[{"zipList", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"list", ",", "names"}], "}"}], "]"}]}], ";", "\n", 
     RowBox[{"faceGroups", "=", 
      RowBox[{"Partition", "[", 
       RowBox[{"zipList", ",", "8"}], "]"}]}], ";", "\n", 
     RowBox[{"tuples", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"imageTakeDrop", "[", 
         RowBox[{"#", ",", "testSize"}], "]"}], "&"}], "/@", "faceGroups"}]}],
      ";", "\n", 
     RowBox[{"tuples$test", "=", 
      RowBox[{"tuples", "[", 
       RowBox[{"[", 
        RowBox[{";;", " ", ";;", " ", "2"}], "]"}], "]"}]}], ";", "\n", 
     RowBox[{"tuples$training", "=", 
      RowBox[{"tuples", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", " ", ";;", " ", "2"}], "]"}], "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"test$images", ",", "test$names"}], "}"}], "=", 
      RowBox[{"Transpose", "@", "tuples$test"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"training$images", ",", "data$names"}], "}"}], "=", 
      RowBox[{"Transpose", "@", "tuples$training"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"test$images", ",", "test$names"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"training$images", ",", "data$names"}], "}"}]}], "}"}]}]}], 
   "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.670839461378255*^9, 3.6708394786206207`*^9}, {
   3.6708395633000326`*^9, 3.670839629551593*^9}, {3.670839671107768*^9, 
   3.670839679680208*^9}, {3.670841106613805*^9, 3.670841109323805*^9}, {
   3.6708416678016815`*^9, 3.670841715889181*^9}, 3.670841843179181*^9, {
   3.6708421283141813`*^9, 3.6708422124366813`*^9}, {3.670842278691681*^9, 
   3.670842305201681*^9}, {3.6708423927916813`*^9, 3.670842496401681*^9}, {
   3.67084407493417*^9, 3.67084410793917*^9}, {3.6708441532191696`*^9, 
   3.6708442639399433`*^9}, {3.670844556274136*^9, 3.670844581765156*^9}, {
   3.6708446696861725`*^9, 3.670844680979124*^9}, {3.6708447470167656`*^9, 
   3.6708447490468464`*^9}, 3.670844944965669*^9, {3.6708449997456694`*^9, 
   3.670845002300669*^9}, 3.6708460061171694`*^9, 3.6708470505149746`*^9, {
   3.670847134000814*^9, 3.6708471870579367`*^9}, {3.670847229754644*^9, 
   3.6708473004226093`*^9}, {3.6708473923592176`*^9, 
   3.6708474591283617`*^9}, {3.6711425595007744`*^9, 
   3.6711425746057744`*^9}, {3.6711431901342793`*^9, 3.67114322091051*^9}, {
   3.671144259591114*^9, 3.67114427198411*^9}, {3.6711444673591213`*^9, 
   3.6711445365984197`*^9}, {3.6711445762768517`*^9, 3.6711446735463505`*^9}, 
   3.671144733499578*^9, 3.671233061338977*^9, {3.671233098884554*^9, 
   3.6712331018695993`*^9}, {3.6712332364341664`*^9, 
   3.6712332515518985`*^9}, {3.671233563820697*^9, 3.6712336017812796`*^9}, {
   3.671234707980796*^9, 3.6712347104333334`*^9}, {3.671234754801515*^9, 
   3.6712347552715225`*^9}, {3.671234850505485*^9, 3.6712348524080143`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"imageTakeDrop", "[", 
   RowBox[{"list_", ",", "testSize_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sample", ",", "taken$singleton", ",", "taken", ",", "dropped"}],
      "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"sample", "=", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "@", "list"}], "]"}], ",", "testSize"}], "]"}]}], 
     ";", "\n", 
     RowBox[{"taken", "=", 
      RowBox[{"list", "[", 
       RowBox[{"[", "sample", "]"}], "]"}]}], ";", "\n", 
     RowBox[{"dropped", "=", 
      RowBox[{"Complement", "[", 
       RowBox[{"list", ",", "taken"}], "]"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{"taken", ",", "dropped"}], "}"}]}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.670841778639181*^9, 3.6708418860691814`*^9}, {
   3.670841938616681*^9, 3.6708421147116814`*^9}, {3.6708443062241344`*^9, 
   3.670844318017106*^9}, 3.670844950425669*^9, {3.6708469996029387`*^9, 
   3.6708470192287235`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing:", "Subsubsection",
 CellChangeTimes->{{3.670839169662675*^9, 3.6708391742824802`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"testerPix", "[", 
     RowBox[{
     "#", ",", "testSet$flat", ",", "dataSet$flat", ",", "testNames", ",", 
      "dataNames"}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "@", "testSet$flat"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.67083835310708*^9, 3.6708383850505433`*^9}, {
   3.6708384208854074`*^9, 3.670838437640668*^9}, {3.670838515510564*^9, 
   3.6708385178973866`*^9}, {3.6711424757907743`*^9, 3.6711424964557743`*^9}, 
   3.6712348576455946`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"testerEig", "[", 
     RowBox[{"#", ",", "50"}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "@", "testSet$flat"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6708111520561743`*^9, 3.670811199930174*^9}, {
   3.670811300775674*^9, 3.670811303470674*^9}, {3.670839010017088*^9, 
   3.6708390113920755`*^9}, 3.6712348628531747`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testEvec", "=", 
   RowBox[{"eigenFace", "[", "testSet", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"testEvec2", "=", 
   RowBox[{"eigenFace", "[", "dataSet", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.670839950381877*^9, 3.670839993374217*^9}, {
  3.670840515681305*^9, 3.6708405343988047`*^9}, {3.670840580623805*^9, 
  3.670840582491305*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"view", "[", 
    RowBox[{"testEvec", "[", 
     RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", "33", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"view", "[", 
    RowBox[{"testEvec2", "[", 
     RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", "345", "]"}]}]}], "Code",
 CellChangeTimes->{{3.6708399966292048`*^9, 3.6708400052541723`*^9}, {
  3.6708400469665117`*^9, 3.6708400578689704`*^9}, {3.670840204538805*^9, 
  3.6708402653088045`*^9}, {3.6708403856838045`*^9, 3.670840388203805*^9}, {
  3.670840536891305*^9, 3.670840565061305*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"testnames", "=", 
   RowBox[{"setSplit", "[", 
    RowBox[{"dataSet$flat", ",", "3", ",", "dataNames"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.6708440555316696`*^9, 3.6708440634516697`*^9}, {
  3.6708446893144574`*^9, 3.670844715433002*^9}, {3.6708450121831694`*^9, 
  3.6708450224906693`*^9}, {3.670845102360669*^9, 3.670845117873169*^9}, {
  3.6708458320371695`*^9, 3.670845835399669*^9}, {3.670845964649669*^9, 
  3.6708459950596695`*^9}, {3.670846044119669*^9, 3.670846055062169*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"testnames", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.671142583968274*^9, 3.6711426180057745`*^9}, {
  3.671143238256204*^9, 3.6711432391787415`*^9}, {3.671143273735123*^9, 
  3.671143286338127*^9}, {3.6711441948272676`*^9, 3.671144229924927*^9}, {
  3.6711447477874136`*^9, 3.671144754747077*^9}, {3.6711588256813335`*^9, 
  3.6711588303478003`*^9}, {3.671233077051718*^9, 3.6712330806117725`*^9}, {
  3.671233637044321*^9, 3.6712336378418336`*^9}, {3.6712336858300705`*^9, 
  3.6712337458409925`*^9}, {3.671233927148777*^9, 3.6712339662093773`*^9}, {
  3.6712348771208935`*^9, 3.6712348788584204`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton",
           DisplayFunction->(FrameBox[
             RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
             Background -> GrayLevel[0.75], 
             BaseStyle -> {
              "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
               ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
             ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
             GrayLevel[0.75], RoundingRadius -> 7]& )], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 90, 26693869973671539419, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 90, 26693869973671539419, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 90, 26693869973671539419, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[90]]], "Output",
 CellChangeTimes->{{3.671142591740774*^9, 3.6711426184782743`*^9}, 
   3.671143242851388*^9, {3.671143276610238*^9, 3.6711432870131545`*^9}, 
   3.671144230692458*^9, {3.671144750453578*^9, 3.6711447557669*^9}, {
   3.6711588263884044`*^9, 3.671158830967862*^9}, {3.6712330714666324`*^9, 
   3.671233081389285*^9}, 3.6712336406293764`*^9, {3.671233689132622*^9, 
   3.671233747041011*^9}, {3.671233930956336*^9, 3.67123396703439*^9}, 
   3.6712348888210735`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{944, 1022},
WindowMargins->{{Automatic, 86}, {Automatic, 37}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (October 9, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2970, 91, 312, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[3553, 115, 101, 1, 39, "Subsubsection"],
Cell[3657, 118, 1314, 35, 226, "Code"],
Cell[4974, 155, 550, 12, 52, "Code"],
Cell[5527, 169, 1891, 52, 153, "Code"],
Cell[7421, 223, 1269, 29, 113, "Code"],
Cell[8693, 254, 1177, 30, 113, "Code"],
Cell[9873, 286, 1071, 29, 113, "Code"],
Cell[10947, 317, 1158, 23, 93, "Code"],
Cell[12108, 342, 1508, 39, 133, "Code"],
Cell[13619, 383, 1566, 41, 153, "Code"],
Cell[15188, 426, 1486, 40, 133, "Code"],
Cell[16677, 468, 378, 10, 93, "Code"],
Cell[17058, 480, 3409, 70, 233, "Code"],
Cell[20470, 552, 1071, 27, 153, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21578, 584, 101, 1, 39, "Subsubsection"],
Cell[21682, 587, 554, 13, 52, "Code"],
Cell[22239, 602, 419, 10, 52, "Code"],
Cell[22661, 614, 386, 9, 73, "Code"],
Cell[23050, 625, 650, 16, 73, "Code"],
Cell[23703, 643, 535, 10, 52, "Code"],
Cell[CellGroupData[{
Cell[24263, 657, 710, 12, 31, "Input"],
Cell[24976, 671, 8064, 205, 146, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
